
Import('env')


lib = env.StaticLibrary(
    target='lib/cargv',
    source=['src/cargv.c',],
    CPPPATH=['include'],
    CCFLAGS=env['CCFLAGS']+['-Wall','-pedantic','-Wextra',
        '-Wcast-align',
        '-Wcast-qual',
        '-Wdisabled-optimization',
        '-Wformat=2',
        '-Winit-self',
        '-Wlogical-op',
        '-Wmissing-include-dirs',
        '-Wredundant-decls',
        '-Wshadow',
        '-Wstrict-overflow=5',
        '-Wundef',
        '-Wno-unused',
        '-Wno-variadic-macros',
        '-Wno-parentheses',
        '-fdiagnostics-show-option',
    ],
    CXXFLAGS=env['CXXFLAGS']+['-Wall','-pedantic','-Wextra',
        '-Wcast-align',
        '-Wcast-qual',
        '-Wctor-dtor-privacy',
        '-Wdisabled-optimization',
        '-Wformat=2',
        '-Winit-self',
        '-Wlogical-op',
        '-Wmissing-include-dirs',
        '-Wnoexcept',
        '-Wold-style-cast',
        '-Woverloaded-virtual',
        '-Wredundant-decls',
        '-Wshadow',
        '-Wsign-promo',
        '-Wstrict-null-sentinel',
        '-Wstrict-overflow=5',
        '-Wundef',
        '-Wno-unused',
        '-Wno-variadic-macros',
        '-Wno-parentheses',
        '-fdiagnostics-show-option',
    ],
)
env.Alias('lib', lib)


version = env.Program(
    target='bin/cargv-version',
    source=['src/cargv_version.c'],
    CPPPATH=['include'],
    LIBS=['cargv'],
    LIBPATH=['lib'],
    CCFLAGS=env['CCFLAGS']+['-Wall','-pedantic','-Wextra',
        '-Wcast-align',
        '-Wcast-qual',
        #'-Wctor-dtor-privacy',
        '-Wdisabled-optimization',
        '-Wformat=2',
        '-Winit-self',
        '-Wlogical-op',
        '-Wmissing-include-dirs',
        #'-Wnoexcept',
        #'-Wold-style-cast',
        #'-Woverloaded-virtual',
        '-Wredundant-decls',
        '-Wshadow',
        #'-Wsign-promo',
        #'-Wstrict-null-sentinel',
        '-Wstrict-overflow=5',
        '-Wundef',
        '-Wno-unused',
        '-Wno-variadic-macros',
        '-Wno-parentheses',
        '-fdiagnostics-show-option',
    ],
)
env.Alias('version', version)


env.Default([lib])
